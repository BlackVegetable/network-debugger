
# Hello, this is a comment.

##
   #

start variables
    shiva "Questionable"
    jerry = "cool"
    xkcd "@#%!@"
    my_mutable_variable = "Change me"

    my_logfile = "logfile.txt"

    # Numbers now
    x = 1
    dx 5
    blagga -14

    favorite_protocol = "UDP"

start filters
    of_filter("127.0.0.1", None, "53", None)
    of_filter(None, "10.0.0.1", None, None)

start state initialState

# No arguments yet
define state initialState
    matching
        match_string("UDP", "dport", "53")
        or match_string(favorite_protocol, "dport", dx)
        or match_string("UDP", "sport", "12")
    compare
        5 < 6
        "Hello" == "Hello"
    do
        set(favorite_protocol, "TCP")
        set_to_field_value(my_mutable_variable, "UDP", "dport")
        print(my_mutable_variable)
        print(favorite_protocol)
        print(blagga)
        log("logfile.txt", blagga)
        inc(blagga)
        print(blagga)
        dec(x)
        print("Got one!")
        print("Starting rules within initialState")
        print_of_rules()
        remove_of_rule(None, "10.0.0.1", None, None)
        add_of_rule(None, None, "11122", None)
        print_time()
        log_time("logfile.txt")
    goto
        stateWithOnlyTimeout
    matching
        match_regex("UDP", "payload", "structure")
    compare
        -42 < 0
    do
        print(shiva)
        set(shiva, "acceptable, yes?")
        print(shiva)
    goto
        stateWithOnlyTimeout

define state stateWithOnlyTimeout
    timeout
        60
    do
        print("Current rules within stateWithOnlyTimeout:")
        print_of_rules()
    goto
        stateWithTwoArguments "Hello, I am a carrot!" 42

define state lotsOfPrinting theAnswer
    matching
        match_string("UDP", "dport", "53")
        or match_regex("UDP", "payload", ".*structure.*")
    do
        set_to_regex_match(my_mutable_variable, "UDP", "payload", ".*", 0)
        print(my_mutable_variable)
        print(blagga)
        set(blagga, theAnswer)
        print(blagga)
        print(x)
        dec(x)
        dec(x)
        print(x)
        print_stacktrace()
        log_stacktrace("logfile.txt")
        print_packet()
        log_packet(my_logfile)
    goto
        exit

define state stateWithTwoArguments arg1 arg2
    timeout
        10
    do
        print(arg1)
        print(shiva)
    goto
        lotsOfPrinting arg2

define state stateWithOneArgument arg1
    matching
        match_atleast("IP", "len", 12)
        match_atmost("IP", "len", 45)
        and match_string("UDP", "dport", "53")
        or match_string("UDP", "dport", arg1)
        match_exactly("IP", "len", 33)
    do
        print("I am a print statement! GWAARRR!")
        print_stacktrace()
    goto
        exit
    timeout
        120
    goto
        stateWithOnlyTimeout
